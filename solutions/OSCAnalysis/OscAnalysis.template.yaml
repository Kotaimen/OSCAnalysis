AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: OSM change analysis.

#Globals:
#  Function:
#    Runtime: python3.6
#    MemorySize: 128
#    Timeout: 30
#    Environment:
#      Variables:


Resources:

  # === Data Storage ===
  StorageBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 90

  # === Osc Data Ingest ===

  OscStatesTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "seq"
          AttributeType: N
      KeySchema:
        - AttributeName: "seq"
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TimeToLiveSpecification:
        Enabled: true
        AttributeName: ttl

  CheckStateFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Check OSC state and store in DDB
      Runtime: python3.6
      MemorySize: 128
      Timeout: 30
      Handler: check_state.lambda_handler
      CodeUri: ./code/check_state.py
      Tracing: Active
      Policies:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref OscStatesTable
      Environment:
        Variables:
          OSC_TABLE_NAME: !Ref OscStatesTable
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)

  TransformChangeFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Transform XML changes to JSON
      Runtime: python3.6
      MemorySize: 256
      Timeout: 60
      Handler: transform_change.lambda_handler
      CodeUri: ./code/transform_change.py
      Tracing: Active
      Policies:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess

  IngestStreamDeliveryRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                "sts:ExternalId": !Ref "AWS::AccountId"
      Policies:
        - PolicyName: FirehoseDeliveryPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowWriteToS3
                Effect: Allow
                Action:
                  - "s3:AbortMultipartUpload"
                  - "s3:GetBucketLocation"
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:ListBucketMultipartUploads"
                  - "s3:PutObject"
                Resource:
                  - !GetAtt StorageBucket.Arn
                  - !Join
                    - "/"
                    - - !GetAtt StorageBucket.Arn
                      - "*"

  IngestStreamTransformInvokeRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                "sts:ExternalId": !Ref "AWS::AccountId"
      Policies:
        - PolicyName: LambdaInvokePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowWriteToS3
                Effect: Allow
                Action:
                  - "lambda:Invoke*"
                Resource:
                  - !GetAtt TransformChangeFunction.Arn

  IngestStream:
    Type: "AWS::KinesisFirehose::DeliveryStream"
    Properties:
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !GetAtt StorageBucket.Arn
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 5
        CompressionFormat: GZIP
        Prefix: "ingest/osc_minute/"
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Type: Lambda
              Parameters:
                - ParameterName: LambdaArn
                  ParameterValue: !GetAtt TransformChangeFunction.Arn
                - ParameterName: NumberOfRetries
                  ParameterValue: 3
                - ParameterName: RoleArn
                  ParameterValue: !GetAtt IngestStreamTransformInvokeRole.Arn
                - ParameterName: BufferSizeInMBs
                  ParameterValue: 3
                - ParameterName: BufferIntervalInSeconds
                  ParameterValue: 60
        RoleARN: !GetAtt IngestStreamDeliveryRole.Arn
        S3BackupConfiguration:
          BucketARN: !GetAtt StorageBucket.Arn
          BufferingHints:
            IntervalInSeconds: 300
            SizeInMBs: 50
          CompressionFormat: GZIP
          Prefix: "ingest/osc_minute_backup/"
          RoleARN: !GetAtt IngestStreamDeliveryRole.Arn
        S3BackupMode: Enabled

  DownloadOscFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Download OSC data and split into XML change fragments
        then write to Firehose
      Runtime: python3.6
      MemorySize: 128
      Timeout: 30
      Handler: download_osc.lambda_handler
      CodeUri: ./code/download_osc.py
      Tracing: Active
      Policies:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
              - firehose:PutRecord*
            Resource: !GetAtt IngestStream.Arn
      Environment:
        Variables:
          FIREHOSE_STREAM_NAME: !Ref IngestStream
      Events:
        Timer:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt OscStatesTable.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
